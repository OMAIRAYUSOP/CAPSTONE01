class Product:
    def __init__(self, product_id, name, product_description, price, quantity):
        self.product_id = product_id
        self.name = name
        self.product_description = product_description
        self.price = price
        self.quantity = quantity

    def update_stock(self, quantity):
        """Updates the stock quantity of the product."""
        self.quantity += quantity

    def display_product(self):
        """Displays the product details."""
        return f"ID: {self.product_id}, Name: {self.name}, Description: {self.product_description}, Price: ${self.price:.2f}, Quantity: {self.quantity}"

    def total_value(self):
        """Calculates and returns the total value of the product in stock."""
        return self.price * self.quantity

class Inventory:
    def __init__(self):
        self.products = []

    def add_product(self, product):
        """Adds a new product to the inventory."""
        self.products.append(product)

    def update_product_stock(self, product_id, quantity):
        """Updates the stock of a specific product by its product_id."""
        for product in self.products:
            if product.product_id == product_id:
                product.update_stock(quantity)
                print(f"Stock for product {product.name} updated. New quantity: {product.quantity}")
                return
        print("Product not found.")

    def display_all_products(self):
        """Displays all products in the inventory."""
        if not self.products:
            print("No products available.")
            return
        for product in self.products:
            print(product.display_product())

    def total_inventory_value(self):
        """Calculates the total value of the entire inventory."""
        total_value = sum(product.total_value() for product in self.products)
        return total_value

# Main menu for interacting with the inventory system
def main():
    inventory = Inventory()

    while True:
        print("\nInventory Management System")
        print("1. Add a new product")
        print("2. Update product stock")
        print("3. Display all products")
        print("4. Calculate total inventory value")
        print("5. Exit")
        choice = input("Enter your choice: ")

        if choice == "1":
            # Adding a new product
            product_id = input("Enter product ID: ")
            name = input("Enter product name: ")
            description = input("Enter product description: ")
            price = float(input("Enter product price: $"))
            quantity = int(input("Enter product quantity: "))
            new_product = Product(product_id, name, description, price, quantity)
            inventory.add_product(new_product)
            print("Product added successfully.")

        elif choice == "2":
            # Updating stock for a product
            product_id = input("Enter the product ID to update stock: ")
            quantity = int(input("Enter the quantity to update: "))
            inventory.update_product_stock(product_id, quantity)

        elif choice == "3":
            # Displaying all products
            inventory.display_all_products()

        elif choice == "4":
            # Calculating total inventory value
            total_value = inventory.total_inventory_value()
            print(f"Total inventory value: ${total_value:.2f}")

        elif choice == "5":
            # Exit the program
            print("Exiting the system. Goodbye!")
            break

        else:
            print("Invalid choice, please try again.")

if __name__ == "__main__":
    main()
